# 用于构建和部署静态站点到 GitHub Pages 的工作流
name: Deploy static site to Pages

on:
  # 在针对 main 分支的 push 事件上运行
  push:
    branches: ["main"]

  # 允许你从 Actions 页签手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，以避免部署冲突
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 获取你的仓库代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境，并为 yarn 配置缓存
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 使用一个最新的 LTS Node.js 版本
          cache: 'yarn' # 关键！为 yarn 开启依赖缓存

      # 3. 安装项目依赖 (使用 --frozen-lockfile 保证 CI 环境一致性)
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # 4. 执行构建命令 (这是小月的假设，请核对你的 package.json)
      - name: Build static site
        run: yarn build

      # 5. 上传构建好的 dist 目录作为部署制品
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist # 假设输出目录是 dist，也请核对

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 必须等待 build 任务成功
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

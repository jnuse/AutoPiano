# 用于构建和部署 AutoPiano 到 GitHub Pages 的工作流
name: Deploy to GitHub Pages

on:
  # 在推送到默认分支时运行
  push:
    branches: ["main"]

  # 允许你从 Actions 页签手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # 考虑到项目依赖非常老旧 (如 Webpack 2)，使用 Node.js 16 是一个更安全、兼容性更好的选择
          node-version: "16"
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build static site
        # 这个命令现在已经在 package.json 中定义好了
        run: yarn build
        env:
          # 对于旧版 Vue CLI 项目，设置此环境变量是确保生产构建的最佳实践
          NODE_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
